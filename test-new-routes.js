/**
 * Script de test pour les nouvelles routes r√©sident
 * Usage: node test-new-routes.js
 */

const axios = require('axios');

const BASE_URL = 'https://ecologis-api.vercel.app';

// Token d'un r√©sident (√† remplacer par un vrai token)
const RESIDENT_TOKEN = 'YOUR_RESIDENT_TOKEN_HERE';

async function testNewRoutes() {
  console.log('üß™ [TEST] Test des nouvelles routes r√©sident...\n');

  const headers = {
    'Authorization': `Bearer ${RESIDENT_TOKEN}`,
    'Content-Type': 'application/json'
  };

  try {
    // Test 1: Route /consommations/my-consommations
    console.log('1Ô∏è‚É£ Test route /consommations/my-consommations...');
    try {
      const response1 = await axios.get(`${BASE_URL}/consommations/my-consommations`, { headers });
      console.log('‚úÖ Succ√®s:', response1.status);
      console.log('üìä Donn√©es:', response1.data);
    } catch (error) {
      console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
    }

    console.log('\n2Ô∏è‚É£ Test route /consommations/my-maison...');
    try {
      const response2 = await axios.get(`${BASE_URL}/consommations/my-maison`, { headers });
      console.log('‚úÖ Succ√®s:', response2.status);
      console.log('üìä Donn√©es:', response2.data);
    } catch (error) {
      console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
    }

    console.log('\n3Ô∏è‚É£ Test route /factures/my-factures...');
    try {
      const response3 = await axios.get(`${BASE_URL}/factures/my-factures`, { headers });
      console.log('‚úÖ Succ√®s:', response3.status);
      console.log('üìä Donn√©es:', response3.data);
    } catch (error) {
      console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
    }

    console.log('\n4Ô∏è‚É£ Test route /factures/my-maison-factures...');
    try {
      const response4 = await axios.get(`${BASE_URL}/factures/my-maison-factures`, { headers });
      console.log('‚úÖ Succ√®s:', response4.status);
      console.log('üìä Donn√©es:', response4.data);
    } catch (error) {
      console.log('‚ùå Erreur:', error.response?.status, error.response?.data);
    }

  } catch (error) {
    console.error('üí• Erreur g√©n√©rale:', error.message);
  }
}

// Fonction pour tester avec un token de propri√©taire (doit √©chouer)
async function testWithProprietaireToken() {
  console.log('\nüîí [TEST] Test avec token propri√©taire (doit √©chouer)...\n');

  const PROPRIETAIRE_TOKEN = 'YOUR_PROPRIETAIRE_TOKEN_HERE';
  const headers = {
    'Authorization': `Bearer ${PROPRIETAIRE_TOKEN}`,
    'Content-Type': 'application/json'
  };

  try {
    const response = await axios.get(`${BASE_URL}/consommations/my-consommations`, { headers });
    console.log('‚ùå Erreur: La route devrait √™tre interdite aux propri√©taires');
  } catch (error) {
    if (error.response?.status === 403) {
      console.log('‚úÖ Succ√®s: Route correctement interdite aux propri√©taires');
    } else {
      console.log('‚ùå Erreur inattendue:', error.response?.status, error.response?.data);
    }
  }
}

// Ex√©cuter les tests
if (require.main === module) {
  console.log('‚ö†Ô∏è  IMPORTANT: Remplacez les tokens dans le script avant de l\'ex√©cuter !\n');
  
  // D√©commenter pour tester
  // testNewRoutes();
  // testWithProprietaireToken();
  
  console.log('Pour tester, d√©commentez les lignes ci-dessus et remplacez les tokens.');
}

module.exports = { testNewRoutes, testWithProprietaireToken };
